generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String     @id @default(cuid())
  email        String     @unique
  name         String?
  image        String?
  passwordHash String?     // 로컬 계정용
  role         Role        @default(USER)
  // 승인 워크플로우
  status       UserStatus  @default(PENDING) // PENDING, ACTIVE, REJECTED
  adminApproved Boolean    @default(false)

  accounts  Account[]
  sessions  Session[]
  notices   Notice[] @relation("NoticeAuthor")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  USER
  ADMIN
}

enum UserStatus {
  PENDING
  ACTIVE
  REJECTED
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Notice {
  id          String   @id @default(cuid())
  title       String
  content     String   @db.Text
  category    String   @default("notice") // notice | press
  views       Int      @default(0)
  published   Boolean  @default(true)
  attachments Json?    @default("[]") // 첨부파일 정보 [{name: string, url: string, size: number, type: string}]
  links       Json?    @default("[]") // 링크 정보 [{title: string, url: string, description?: string}]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  authorId    String?
  author      User?    @relation("NoticeAuthor", fields: [authorId], references: [id])
}

// Press 모델은 제거됨 - Notice 모델의 press 카테고리로 통합

model GalleryItem {
  id          String   @id @default(cuid())
  title       String
  imageUrl    String
  caption     String?
  attachments Json     @default("[]") // 첨부파일 정보
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Resource {
  id          String   @id @default(cuid())
  title       String
  fileUrl     String
  filetype    String?
  filesize    Int?
  attachments Json?    @default("[]") // 첨부파일 정보
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
